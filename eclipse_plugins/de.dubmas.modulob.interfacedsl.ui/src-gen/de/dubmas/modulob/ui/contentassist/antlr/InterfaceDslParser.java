/*
* generated by Xtext
*/
package de.dubmas.modulob.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.dubmas.modulob.services.InterfaceDslGrammarAccess;

public class InterfaceDslParser extends AbstractContentAssistParser {
	
	@Inject
	private InterfaceDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.dubmas.modulob.ui.contentassist.antlr.internal.InternalInterfaceDslParser createParser() {
		de.dubmas.modulob.ui.contentassist.antlr.internal.InternalInterfaceDslParser result = new de.dubmas.modulob.ui.contentassist.antlr.internal.InternalInterfaceDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getValueObjectAccess().getAlternatives(), "rule__ValueObject__Alternatives");
					put(grammarAccess.getInterfaceModelAccess().getGroup(), "rule__InterfaceModel__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup(), "rule__Interface__Group__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3(), "rule__Interface__Group_3__0");
					put(grammarAccess.getInterfaceAccess().getGroup_3_2(), "rule__Interface__Group_3_2__0");
					put(grammarAccess.getMethodAccess().getGroup(), "rule__Method__Group__0");
					put(grammarAccess.getParameterAccess().getGroup(), "rule__Parameter__Group__0");
					put(grammarAccess.getDelegateAccess().getGroup(), "rule__Delegate__Group__0");
					put(grammarAccess.getTypeLibAccess().getGroup(), "rule__TypeLib__Group__0");
					put(grammarAccess.getPrimitiveAccess().getGroup(), "rule__Primitive__Group__0");
					put(grammarAccess.getAnyAccess().getGroup(), "rule__Any__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup(), "rule__TypeRef__Group__0");
					put(grammarAccess.getEFloatObjectAccess().getGroup(), "rule__EFloatObject__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getInterfaceModelAccess().getCurrentAssignment_0(), "rule__InterfaceModel__CurrentAssignment_0");
					put(grammarAccess.getInterfaceModelAccess().getModuleAssignment_2(), "rule__InterfaceModel__ModuleAssignment_2");
					put(grammarAccess.getInterfaceModelAccess().getVersionAssignment_4(), "rule__InterfaceModel__VersionAssignment_4");
					put(grammarAccess.getInterfaceModelAccess().getInterfacesAssignment_5(), "rule__InterfaceModel__InterfacesAssignment_5");
					put(grammarAccess.getInterfaceAccess().getCommentAssignment_0(), "rule__Interface__CommentAssignment_0");
					put(grammarAccess.getInterfaceAccess().getNameAssignment_2(), "rule__Interface__NameAssignment_2");
					put(grammarAccess.getInterfaceAccess().getRequiredInterfacesAssignment_3_1(), "rule__Interface__RequiredInterfacesAssignment_3_1");
					put(grammarAccess.getInterfaceAccess().getRequiredInterfacesAssignment_3_2_1(), "rule__Interface__RequiredInterfacesAssignment_3_2_1");
					put(grammarAccess.getInterfaceAccess().getMethodsAssignment_5(), "rule__Interface__MethodsAssignment_5");
					put(grammarAccess.getInterfaceAccess().getDelegatesAssignment_6(), "rule__Interface__DelegatesAssignment_6");
					put(grammarAccess.getMethodAccess().getCommentAssignment_0(), "rule__Method__CommentAssignment_0");
					put(grammarAccess.getMethodAccess().getIsStaticAssignment_1(), "rule__Method__IsStaticAssignment_1");
					put(grammarAccess.getMethodAccess().getTypeAssignment_2(), "rule__Method__TypeAssignment_2");
					put(grammarAccess.getMethodAccess().getNameAssignment_3(), "rule__Method__NameAssignment_3");
					put(grammarAccess.getMethodAccess().getParametersAssignment_4(), "rule__Method__ParametersAssignment_4");
					put(grammarAccess.getParameterAccess().getSignaturePartAssignment_0(), "rule__Parameter__SignaturePartAssignment_0");
					put(grammarAccess.getParameterAccess().getTypeAssignment_2(), "rule__Parameter__TypeAssignment_2");
					put(grammarAccess.getParameterAccess().getNameAssignment_3(), "rule__Parameter__NameAssignment_3");
					put(grammarAccess.getDelegateAccess().getNameAssignment_1(), "rule__Delegate__NameAssignment_1");
					put(grammarAccess.getDelegateAccess().getMethodsAssignment_3(), "rule__Delegate__MethodsAssignment_3");
					put(grammarAccess.getTypeLibAccess().getPrimitiveTypesAssignment_0(), "rule__TypeLib__PrimitiveTypesAssignment_0");
					put(grammarAccess.getTypeLibAccess().getAnyTypeAssignment_1(), "rule__TypeLib__AnyTypeAssignment_1");
					put(grammarAccess.getPrimitiveAccess().getNameAssignment_1(), "rule__Primitive__NameAssignment_1");
					put(grammarAccess.getAnyAccess().getNameAssignment_1(), "rule__Any__NameAssignment_1");
					put(grammarAccess.getTypeRefAccess().getReferencedAssignment_0(), "rule__TypeRef__ReferencedAssignment_0");
					put(grammarAccess.getTypeRefAccess().getIsMultiAssignment_1(), "rule__TypeRef__IsMultiAssignment_1");
					put(grammarAccess.getStringValueAccess().getValueAssignment(), "rule__StringValue__ValueAssignment");
					put(grammarAccess.getIntegerValueAccess().getValueAssignment(), "rule__IntegerValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.dubmas.modulob.ui.contentassist.antlr.internal.InternalInterfaceDslParser typedParser = (de.dubmas.modulob.ui.contentassist.antlr.internal.InternalInterfaceDslParser) parser;
			typedParser.entryRuleInterfaceModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public InterfaceDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(InterfaceDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
