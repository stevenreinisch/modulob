/*
* generated by Xtext
*/
package de.dubmas.modulob.ui.contentassist.antlr;

import java.util.Collection;
import java.util.Map;
import java.util.HashMap;

import org.antlr.runtime.RecognitionException;
import org.eclipse.xtext.AbstractElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.AbstractContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.FollowElement;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;

import com.google.inject.Inject;

import de.dubmas.modulob.services.BehaviourDslGrammarAccess;

public class BehaviourDslParser extends AbstractContentAssistParser {
	
	@Inject
	private BehaviourDslGrammarAccess grammarAccess;
	
	private Map<AbstractElement, String> nameMappings;
	
	@Override
	protected de.dubmas.modulob.ui.contentassist.antlr.internal.InternalBehaviourDslParser createParser() {
		de.dubmas.modulob.ui.contentassist.antlr.internal.InternalBehaviourDslParser result = new de.dubmas.modulob.ui.contentassist.antlr.internal.InternalBehaviourDslParser(null);
		result.setGrammarAccess(grammarAccess);
		return result;
	}
	
	@Override
	protected String getRuleName(AbstractElement element) {
		if (nameMappings == null) {
			nameMappings = new HashMap<AbstractElement, String>() {
				private static final long serialVersionUID = 1L;
				{
					put(grammarAccess.getValueObjectAccess().getAlternatives(), "rule__ValueObject__Alternatives");
					put(grammarAccess.getBehaviouralModelAccess().getGroup(), "rule__BehaviouralModel__Group__0");
					put(grammarAccess.getBehaviourAccess().getGroup(), "rule__Behaviour__Group__0");
					put(grammarAccess.getReactionAccess().getGroup(), "rule__Reaction__Group__0");
					put(grammarAccess.getReactionAccess().getGroup_4(), "rule__Reaction__Group_4__0");
					put(grammarAccess.getReferenceableMethodNameAccess().getGroup(), "rule__ReferenceableMethodName__Group__0");
					put(grammarAccess.getReferenceableMethodNameAccess().getGroup_1(), "rule__ReferenceableMethodName__Group_1__0");
					put(grammarAccess.getTypeLibAccess().getGroup(), "rule__TypeLib__Group__0");
					put(grammarAccess.getPrimitiveAccess().getGroup(), "rule__Primitive__Group__0");
					put(grammarAccess.getAnyAccess().getGroup(), "rule__Any__Group__0");
					put(grammarAccess.getTypeRefAccess().getGroup(), "rule__TypeRef__Group__0");
					put(grammarAccess.getEFloatObjectAccess().getGroup(), "rule__EFloatObject__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup(), "rule__QualifiedName__Group__0");
					put(grammarAccess.getQualifiedNameAccess().getGroup_1(), "rule__QualifiedName__Group_1__0");
					put(grammarAccess.getBehaviouralModelAccess().getCurrentAssignment_0(), "rule__BehaviouralModel__CurrentAssignment_0");
					put(grammarAccess.getBehaviouralModelAccess().getSystemAssignment_2(), "rule__BehaviouralModel__SystemAssignment_2");
					put(grammarAccess.getBehaviouralModelAccess().getVersionAssignment_4(), "rule__BehaviouralModel__VersionAssignment_4");
					put(grammarAccess.getBehaviouralModelAccess().getBehavioursAssignment_5(), "rule__BehaviouralModel__BehavioursAssignment_5");
					put(grammarAccess.getBehaviourAccess().getNameAssignment_1(), "rule__Behaviour__NameAssignment_1");
					put(grammarAccess.getBehaviourAccess().getReactionsAssignment_3(), "rule__Behaviour__ReactionsAssignment_3");
					put(grammarAccess.getReactionAccess().getInterfaceAssignment_1(), "rule__Reaction__InterfaceAssignment_1");
					put(grammarAccess.getReactionAccess().getNotificationAssignment_3(), "rule__Reaction__NotificationAssignment_3");
					put(grammarAccess.getReactionAccess().getOrderAssignment_4_1(), "rule__Reaction__OrderAssignment_4_1");
					put(grammarAccess.getReactionAccess().getMethodAssignment_6(), "rule__Reaction__MethodAssignment_6");
					put(grammarAccess.getTypeLibAccess().getPrimitiveTypesAssignment_0(), "rule__TypeLib__PrimitiveTypesAssignment_0");
					put(grammarAccess.getTypeLibAccess().getAnyTypeAssignment_1(), "rule__TypeLib__AnyTypeAssignment_1");
					put(grammarAccess.getPrimitiveAccess().getNameAssignment_1(), "rule__Primitive__NameAssignment_1");
					put(grammarAccess.getAnyAccess().getNameAssignment_1(), "rule__Any__NameAssignment_1");
					put(grammarAccess.getTypeRefAccess().getReferencedAssignment_0(), "rule__TypeRef__ReferencedAssignment_0");
					put(grammarAccess.getTypeRefAccess().getIsMultiAssignment_1(), "rule__TypeRef__IsMultiAssignment_1");
					put(grammarAccess.getStringValueAccess().getValueAssignment(), "rule__StringValue__ValueAssignment");
					put(grammarAccess.getIntegerValueAccess().getValueAssignment(), "rule__IntegerValue__ValueAssignment");
					put(grammarAccess.getFloatValueAccess().getValueAssignment(), "rule__FloatValue__ValueAssignment");
				}
			};
		}
		return nameMappings.get(element);
	}
	
	@Override
	protected Collection<FollowElement> getFollowElements(AbstractInternalContentAssistParser parser) {
		try {
			de.dubmas.modulob.ui.contentassist.antlr.internal.InternalBehaviourDslParser typedParser = (de.dubmas.modulob.ui.contentassist.antlr.internal.InternalBehaviourDslParser) parser;
			typedParser.entryRuleBehaviouralModel();
			return typedParser.getFollowElements();
		} catch(RecognitionException ex) {
			throw new RuntimeException(ex);
		}		
	}
	
	@Override
	protected String[] getInitialHiddenTokens() {
		return new String[] { "RULE_WS", "RULE_ML_COMMENT", "RULE_SL_COMMENT" };
	}
	
	public BehaviourDslGrammarAccess getGrammarAccess() {
		return this.grammarAccess;
	}
	
	public void setGrammarAccess(BehaviourDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}
}
